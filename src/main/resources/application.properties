## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://localhost:5432/ih
spring.datasource.username=man
spring.datasource.password=pass123
spring.quartz.job-store-type=jdbc

# Custon property. I added the prefix "dvl" to maintain the existing pattern.
dvl.linkedin.name=victor-pinho-208779a8

# Modified the Rest prefix variable according to the first three characters of the "linkedin.name" variable value.
dvl.rest.prefix=/vic
dvl.project.version=@project.version@

# java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
# https://stackoverflow.com/questions/49110818/method-org-postgresql-jdbc-pgconnection-createclob-is-not-yet-implemented
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
#spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate

# The application received the prefix "118", which refers to the first character of my username on Linkedin in the ASCII table.
server.port=11880

spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# logging
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
dvl.rest.debug.payLoad=false
